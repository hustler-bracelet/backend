
from src.database.models import Activity, User
from src.common.format import format_number

from .base import BaseTelegramNotificationService


class ActivityNotificationService(BaseTelegramNotificationService):

    async def send_activity_notification(self, user: User, activity: Activity) -> bool:
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""

        text = (
            f"üîî –ù–∞—á–∞–ª–∞—Å—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å <b>¬´{activity.name}¬ª</b>!\n\n"
            f"‚ö°Ô∏è –°–∫–æ—Ä–µ–µ —É—Å–ø–µ–π –∑–∞–ª–µ—Ç–µ—Ç—å –∏ –ø–æ–±–æ—Ä–æ—Ç—å—Å—è –∑–∞ <b>{format_number(activity.fund)}‚ÇΩ</b>, –ø–æ–∫–∞ –µ—Å—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ –º–µ—Å—Ç–∞!"
        )

        await self._bot.send_message(user.telegram_id, text)

    async def send_activity_finished_notification(self, user: User, earn_str: str, activity: Activity) -> bool:
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""

        text = (
            f"üîî –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å <b>¬´{activity.name}¬ª</b> –∑–∞–∫—Ä—ã—Ç–∞!\n"
            f"{earn_str}"
            "‚û°Ô∏è –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–µ–Ω—å–≥–∏, –Ω–∞–ø–∏—à–∏ @ambienthugg\n"
            "‚ùó –î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –¥–µ–Ω—å–≥–∏ –≤ TON-–∞—Ö\n"
        )

        await self._bot.send_message(user.telegram_id, text)
