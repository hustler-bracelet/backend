import asyncio

from aiogram import Bot, types

from src.api.schemas import ActivityStartRequestData

from .base import BaseTelegramNotificationService


"""
‚ö°Ô∏è –ó–∞–ø—É—Å–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏

–ù–∞–∑–≤–∞–Ω–∏–µ: üí∞ –°–µ–∑–æ–Ω –∫—Ä–∏–ø—Ç—ã
–û–ø–∏—Å–∞–Ω–∏–µ:
–ù—É —á—Ç–æ, —Ö–∞—Å–ª–µ—Ä—ã, –≤—Ä–µ–º—è –ø–∞–º–ø–∏—Ç—å, –¥–∞–º–ø–∏—Ç—å, —Ö—É—è–º–ø–∏—Ç—å, –ú–ú–ú‚Äô–∏—Ç—å, –∏ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞–∫–∞–Ω—ã!
–í—ã–±–∏—Ä–∞–π —Å–≤–æ—é –Ω–∏—à—É –∏ –≤–ø–µ—Ä—ë–¥ –∂–∞—Ä–∏—Ç—å —Å—Ç–µ–π–∫–∏–Ω–≥–∏!
–ú–µ—Å—Ç: 20
–ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥: 100 000‚ÇΩ
–î–µ–¥–ª–∞–π–Ω: 7 –∏—é–ª—è 2024 (23:59 –ú–°–ö)

‚úàÔ∏è TON staker
–≠—Ç–æ—Ç –±—Ä–æ—É—Å–∫–∏ –ª—é–±–∏—Ç –î—É—Ä–æ–≤–∞
–ü–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ: –°—Ç–µ–π–∫–∞—Ç—å —Ç–æ–Ω
(–æ–ø–∏—Å–∞–Ω–∏–µ —Ç–∏–ø–∞)
5 –±–∞–ª–ª–æ–≤, –¥–æ 3 –∏—é–ª—è 23:59 –ú–°–ö

üí≤ USDT enjoyer
–ó–∞ –∫–ª–∞—Å—Å–∏–∫—É
–ü–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ: –•–∑ —á—ë-–Ω–∏—Ç—å —Å–¥–µ–ª–∞–π
(–æ–ø–∏—Å–∞–Ω–∏–µ —Ç–∏–ø–∞)
5 –±–∞–ª–ª–æ–≤, –¥–æ 3 –∏—é–ª—è 23:59 –ú–°–ö

üçº MUMBA pusher
–ê–±–æ–±—É—Å
–ü–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ: —è –∫—É—Å–∞—é –∫–æ—à–µ–∫
(–æ–ø–∏—Å–∞–Ω–∏–µ —Ç–∏–ø–∞)
5 –±–∞–ª–ª–æ–≤, –¥–æ 3 –∏—é–ª—è 23:59 –ú–°–ö

–ü–æ–≥–Ω–∞–ª–∏, —Ö—É–ª–µ?

"""


class AdminActivityNotificationService(BaseTelegramNotificationService):

    async def send_notification(self, user_id: int, activity_id: int, data: ActivityStartRequestData) -> bool:
        text = (
            "‚ö°Ô∏è –ó–∞–ø—É—Å–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n\n"
            f"–ù–∞–∑–≤–∞–Ω–∏–µ: {data.activity.name}\n"
            f"–û–ø–∏—Å–∞–Ω–∏–µ: {data.activity.description}\n"
            f"–ú–µ—Å—Ç: {data.activity.total_places}\n"
            f"–ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥: {data.activity.fund} ‚ÇΩ\n"
        )

        for niche in data.niches:
            text += (
                f"{niche.name}\n"
                f"{niche.description}\n"
                f"–ü–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ: {niche.task.name}"
                f"{niche.task.description}\n"
                f"{niche.task.points} –±–∞–ª–ª–æ–≤, –¥–æ {niche.task.deadline}\n\n"
            )

        kb = types.InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    types.InlineKeyboardButton(
                        text="‚ö°Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
                        callback_data=f"admin:activity_run:{activity_id}",
                    )
                ]
            ]
        )

        await self._bot.send_message(user_id, text, reply_markup=kb)
